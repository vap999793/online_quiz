{"version":3,"sources":["./src/app/services/registerLogin/register-login.service.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/start-test/start-test.component.ts","./src/app/components/start-test/start-test.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/questions/questions.component.html","./src/app/components/questions/questions.component.ts","./src/app/app-routing.module.ts","./src/app/components/finish-test/finish-test.component.ts","./src/app/components/finish-test/finish-test.component.html","./src/app/services/questions/questions.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { registerCandidates } from '../../models/registerCandidates'\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterLoginService {\n\n  readonly baseUrl = 'http://localhost:5000/candidates/register';\n  private loginUrl = 'http://localhost:5000/candidates/login';\n\n  constructor(private http : HttpClient) { }\n\n  postCandidates(regCand : registerCandidates){\n    return this.http.post(this.baseUrl, regCand);\n  }\n\n  loginCandidate(loginCredentials : Object){\n    return this.http.post(this.loginUrl, loginCredentials);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionsService } from '../../services/questions/questions.service';\nimport { questions } from '../../models/questions';\n\n@Component({\n  selector: 'app-start-test',\n  templateUrl: './start-test.component.html',\n  styleUrls: ['./start-test.component.css']\n})\nexport class StartTestComponent implements OnInit {\n\n  // readonly questionsUrl = 'http://localhost:5000/questions';\n\n  // questionObj:questions = new questions({});\n\n  constructor(private router : Router, public questionService:QuestionsService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  startTestEventHandler(){\n    // this.questionService.getQuestion().subscribe((res)=>{\n    //   console.log(res);\n      this.router.navigateByUrl('questions/1')\n      \n    // })\n  }\n\n}\n","<div class=\"container\">\n\n    <div class=\"instructions\">\n        <ol>\n            <h3>Please read the below points carefully.</h3>\n            <li>Maximum score: 150 points</li>\n            <li>10 marks will be awarded for each question</li>\n            <li>Zero marks will be awarded if not attempted</li>\n            <li>There is no negative marking</li>\n            <li>There are total 15 questions</li>\n            \n        </ol>\n\n    </div>\n    <div>\n        <h2 class=\"bg-light text-align-center\">Click on start test to begin.</h2>\n    </div>\n    <input class=\"start\" type=\"button\" value=\"Start Test\" (click)=\"startTestEventHandler();\">\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n  <!-- Bootstrap CSS -->\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\n\n  <title>Hello, world!</title>\n</head>\n\n<body>\n\n  <!-- Navbar here -->\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" routerLink=\"\" routerLinkActive=\"active\">Navbar</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/home\" routerLinkActive=\"active\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link navtxt\" routerLink=\"candidates/register\" routerLinkActive=\"active\">Register</a>\n          </li>\n          \n          <li class=\"nav-item\">\n            <a class=\"nav-link navtxt\" routerLink=\"candidates/login\" routerLinkActive=\"active\">Login</a>\n          </li>\n        </ul>\n        <form class=\"d-flex\">\n          <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n          <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </div>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n\n\n\n\n  <!-- Footer Here -->\n\n  <footer class=\"page-footer font-small bg-dark pt-4 mt-4\">\n\n\n    <div class=\"container1\">\n\n\n      <ul class=\"list-unstyled list-inline text-center py-2\">\n        <li class=\"list-inline-item\">\n          <h5 class=\"mb-1\" id=\"register\">Register for free</h5>\n        </li>\n        <li class=\"list-inline-item\" id=\"signup1\">\n          <a href=\"candidates/register\" class=\"btn btn-outline-white btn-rounded\" id=\"signup\">Sign up!</a>\n        </li>\n      </ul>\n\n\n    </div>\n\n    <div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\n      <a href=\"https://www.google.com\" target=\"_blank\"> Company info</a>\n      <a class=\"ml-3\" href=\"https://www.facebook.com/vishal.prajapati.77398143\" target=\"_blank\"> <span\n          class=\"fa fa-facebook\"></span></a>\n      <a href=\"https://www.google.com\" target=\"_blank\"> <span class=\"fa fa-twitter\"></span></a>\n      <a href=\"https://www.google.com\" target=\"_blank\"> <i class=\"fa fa-search\"></i></a>\n    </div>\n\n  </footer>\n\n\n  <!-- Optional JavaScript; choose one of the two! -->\n\n  <!-- Option 1: Bootstrap Bundle with Popper -->\n  <!-- <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf\" crossorigin=\"anonymous\"></script> -->\n\n  <!-- Option 2: Separate Popper and Bootstrap JS -->\n\n  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js\"\n    integrity=\"sha384-SR1sx49pcuLnqZUnnPwx6FCym0wLsk5JZuNx2bPPENzswTNFaQU1RDvt3wT4gWFG\"\n    crossorigin=\"anonymous\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js\"\n    integrity=\"sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc\"\n    crossorigin=\"anonymous\"></script>\n\n</body>\n\n</html>","import { Component, OnInit } from '@angular/core';\n\nimport { Validators, FormGroup, FormBuilder, FormControl } from '@angular/forms';\n// import { CustomvalidationService } from '../services/customvalidation.service';\nimport { Router } from '@angular/router';\nimport { RegisterLoginService } from 'src/app/services/registerLogin/register-login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm:FormGroup = new FormGroup({});\n\n  constructor(public router:Router,private fb: FormBuilder, public regLoginService:RegisterLoginService) { }\n\n  ngOnInit(): void {\n\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      \n      password: ['', Validators.compose([Validators.required])]\n      \n    })\n  }\n\n  readLoginCredentials(form:HTMLFormElement){\n\n    let email = (<HTMLInputElement>form.getElementsByTagName(\"input\").namedItem('email')).value;\n\n    let password = (<HTMLInputElement>form.getElementsByTagName(\"input\").namedItem('password')).value;\n\n    let loginCredentials = {\n      email:email,\n      password:password\n    }\n\n    return loginCredentials;\n\n  }\n\n  candidateLogin(event : Event){\n\n    event.preventDefault();\n    let form  = <HTMLFormElement>event.target;\n\n    let loginCandidate = this.readLoginCredentials(form);\n\n    console.log(loginCandidate);\n\n    this.regLoginService.loginCandidate(loginCandidate).subscribe((res)=>{\n      console.log(res);\n\n      this.router.navigateByUrl('/candidates/startTest');\n      \n    })\n    \n  }\n\n}\n","\n<div class=\"container-fluid bgregister\">\n  <div class=\"make_center\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12 col-sm-6 col-md-6 mt-2 mb-2\">\n        <form\n          class=\"form-container\"\n          [formGroup]=\"loginForm\"\n          (submit)=\"candidateLogin($event)\"\n        >\n          <div class=\"form-group\">\n            <h4 class=\"text-center font-weight-bold\">Login</h4>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"InputEmail1\">Email Address</label>\n            <input\n              type=\"email\"\n              formControlName=\"email\"\n              class=\"form-control\"\n              id=\"emails\"\n              aria-describeby=\"emailHelp\"\n              placeholder=\"Enter email\"\n              autocomplete=\"off\"\n              ng-required=\"true\"\n              name=\"email\"\n            />\n            <!-- <span\n                            *ngIf=\"registerForm.get('email').errors?.required && (registerForm.get('email').touched || !registerForm.get('email').pristine)\"\n                            id=\"username\" class=\"text-danger font-weight-bold\">\n                            **Email is required\n                        </span> -->\n          </div>\n\n          <div class=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n            />\n            <!-- <span class=\"text-danger font-weight-bold\"\n                            *ngIf=\"(registerForm.get('password').touched || !registerForm.get('password').pristine) && registerForm.get('password').errors?.required\">\n                            **Password is required\n                        </span> -->\n            <!-- <span class=\"text-danger font-weight-bold\"\n                            *ngIf=\"(registerForm.get('password').touched || !registerForm.get('password').pristine) && registerForm.get('password').errors?.invalidPassword\">\n                            **Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n                            letter and 1 number\n                        </span> -->\n          </div>\n\n          <button type=\"submit\" class=\"btn btn-primary btn-block\">\n            Submit\n          </button>\n          <label>\n            <div class=\"rem\">\n              <input type=\"checkbox\" name=\"remember\" /> Remember me\n            </div>\n          </label>\n          <!-- <div class=\"form-footer\">\n                        <p> Don't have an account? <a href=\"#\">Sign Up</a></p>\n\n                    </div> -->\n          <div class=\"container1\">\n            <button type=\"reset\" class=\"cancelbtn btn btn-primary btn-block\">\n              Cancel\n            </button>\n            <!-- <span class=\"psw float-right\">Forgot <a href=\"#\">password?</a></span> -->\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, FormControl } from '@angular/forms';\n// import { CustomvalidationService } from '../services/customvalidation.service';\nimport { Router } from '@angular/router';\nimport { RegisterLoginService } from 'src/app/services/registerLogin/register-login.service';\nimport { registerCandidates } from '../../models/registerCandidates';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm:FormGroup = new FormGroup({});\n\n  constructor(public router:Router,private fb: FormBuilder, public regLoginService:RegisterLoginService) { }\n\n  ngOnInit(): void {\n\n    this.registerForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mobile: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n      // mobile:['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n      // username: ['', [Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password: ['', Validators.compose([Validators.required])],\n      confirmPassword: ['', Validators.compose([Validators.required])]\n      \n    })\n  }\n\n\n  get f(){\n    return this.registerForm.controls;\n  }\n\n  readValuesFromForm(f:HTMLFormElement){\n\n    // let _id = (<HTMLInputElement>f.getElementsByTagName(\"input\").namedItem('_id')).value; \n    let firstname = (<HTMLInputElement>f.getElementsByTagName(\"input\").namedItem('firstname')).value;\n    let lastname = (<HTMLInputElement>f.getElementsByTagName(\"input\").namedItem('lastname')).value;\n    let email = (<HTMLInputElement>f.getElementsByTagName(\"input\").namedItem('email')).value;\n    let mobile = (<HTMLInputElement>f.getElementsByTagName(\"input\").namedItem('mobile')).value;\n    let password = (<HTMLInputElement>f.getElementsByTagName(\"input\").namedItem('password')).value;\n    let confirmPassword = (<HTMLInputElement>f.getElementsByTagName(\"input\").namedItem('confirmPassword')).value;\n\n    let regCandidates : registerCandidates = {\n      firstname:firstname,\n      lastname:lastname,\n      email:email,\n      mobile:mobile,\n      password:password,\n      confirmPassword:confirmPassword\n\n\n    }\n\n    return regCandidates;\n\n  }\n\n  empSubmit(event : Event){\n\n    event.preventDefault();\n\n    let form = <HTMLFormElement>event.target;\n    let registeringEmployee = this.readValuesFromForm(form);\n\n    console.log(registeringEmployee);\n\n    this.regLoginService.postCandidates(registeringEmployee).subscribe((res)=>{\n      console.log(res);\n      \n      this.router.navigateByUrl('/candidates/login');\n    })\n    \n\n  }\n\n}\n","<p>register works!</p>\n<div class=\"container-fluid bgregister\">\n    <div class=\"make_center\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-sm-6 col-md-6 mt-2 mb-2\">\n                <form class=\"form-container\" [formGroup]=\"registerForm\" (submit)='empSubmit($event)'>\n                    <div class=\"form-group\">\n                        <h4 class=\"text-center font-weight-bold\"> Registration </h4>\n\n\n                        <label for=\"InputPassword1\">First Name</label>\n                        <input type=\"text\" formControlName=\"firstname\" class=\"form-control\" id=\"emails\"\n                            aria-describeby=\"emailHelp\" placeholder=\"Enter your firstname\" autocomplete=\"off\"\n                            ng-required=\"true\" name=\"firstname\">\n                        <!-- <span\n                        \n                            *ngIf=\"registerForm.get('name').errors?.required && (registerForm.get('name').touched || !registerForm.get('name').pristine)\"\n                            id=\"username\" class=\"text-danger font-weight-bold\">\n                            **Name is required\n                        </span> -->\n\n\n                    </div>\n\n                    <div class=\"form-group\">\n\n\n                        <label for=\"InputPassword1\">Last Name</label>\n                        <input type=\"text\" formControlName=\"lastname\" class=\"form-control\" id=\"emails\"\n                            aria-describeby=\"emailHelp\" placeholder=\"Enter your lastname\" autocomplete=\"off\"\n                            ng-required=\"true\" name=\"lastname\">\n                        <!-- <span\n                            *ngIf=\"registerForm.get('name').errors?.required && (registerForm.get('name').touched || !registerForm.get('name').pristine)\"\n                            id=\"username\" class=\"text-danger font-weight-bold\">\n                            **LastName is required\n                        </span> -->\n\n\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"InputEmail1\">Email Address</label>\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"emails\"\n                            aria-describeby=\"emailHelp\" placeholder=\"Enter email\" autocomplete=\"off\" ng-required=\"true\"\n                            name=\"email\">\n                        <!-- <span\n                            *ngIf=\"registerForm.get('email').errors?.required && (registerForm.get('email').touched || !registerForm.get('email').pristine)\"\n                            id=\"username\" class=\"text-danger font-weight-bold\">\n                            **Email is required\n                        </span> -->\n                    </div>\n\n                    <!-- <div class=\"form-group\">\n                        <label for=\"InputEmail1\">Mobile</label>\n                        <input type=\"number\" formControlName=\"mobile\" class=\"form-control\" id=\"emails\"\n                            aria-describeby=\"emailHelp\" placeholder=\"Enter your mobile number\" autocomplete=\"off\">\n                        <span\n                            *ngIf=\"registerForm.get('mobile').errors?.required && (registerForm.get('mobile').touched || !registerForm.get('mobile').pristine)\"\n                            id=\"username\" class=\"text-danger font-weight-bold\">\n                            **Mobile Number is required\n                        </span>\n                        <span\n                            *ngIf=\"registerForm.get('mobile').errors?.minlength && (registerForm.get('mobile').touched || !registerForm.get('mobile').pristine)\"\n                            id=\"username\" class=\"text-danger font-weight-bold\">\n                            **Must contain 10 digits\n                        </span>\n                        <span\n                            *ngIf=\"registerForm.get('mobile').errors?.maxlength && (registerForm.get('mobile').touched || !registerForm.get('mobile').pristine)\"\n                            id=\"username\" class=\"text-danger font-weight-bold\">\n                            **Must contain 10 digits\n                        </span>\n                    </div> -->\n\n                \n\n                    <div class=\"form-group\">\n                        <label for=\"mobileNumber\">Mobile Number</label>\n                        <input formControlName=\"mobile\" id=\"mobile\" type=\"number\" class=\"form-control\"\n                            placeholder=\"Enter your 10 digits mobile number\" name=\"mobile\">\n                        <!-- <div *ngIf=\"(f.mobileNumber.touched || !f.mobileNumber.pristine) && f.mobileNumber.invalid\"\n                            class=\"text-danger font-weight-bold\">\n                            <div *ngIf=\"f.mobileNumber.errors.required\">**Mobile Number is required.</div>\n                            <div *ngIf=\"f.mobileNumber.errors.pattern\">**Please, Enter 10 digit Mobile Number.</div>\n                        </div> -->\n                    </div>\n\n                    <!-- <div class=\"form-group\">\n                        <label for=\"InputEmail1\">College Name</label>\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"emails\"\n                            aria-describeby=\"emailHelp\" placeholder=\"Enter your name\" autocomplete=\"off\"\n                            ng-required=\"true\">\n                        <span\n                            *ngIf=\"registerForm.get('name').errors?.required && (registerForm.get('name').touched || !registerForm.get('name').pristine)\"\n                            id=\"username\" class=\"text-danger font-weight-bold\">\n                            **College Name is required\n                        </span>\n                    </div>  -->\n\n\n\n                    <div class=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Password\" \n                        name=\"password\">\n                        <!-- <span class=\"text-danger font-weight-bold\"\n                            *ngIf=\"(registerForm.get('password').touched || !registerForm.get('password').pristine) && registerForm.get('password').errors?.required\">\n                            **Password is required\n                        </span> -->\n                        <!-- <span class=\"text-danger font-weight-bold\"\n                            *ngIf=\"(registerForm.get('password').touched || !registerForm.get('password').pristine) && registerForm.get('password').errors?.invalidPassword\">\n                            **Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n                            letter and 1 number\n                        </span> -->\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Confirm Password</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\"\n                            placeholder=\"Confirm Password\" name=\"confirmPassword\">\n                        <!-- <span class=\"text-danger font-weight-bold\"\n                            *ngIf=\"(registerForm.get('confirmPassword').touched || !registerForm.get('confirmPassword').pristine) && registerForm.get('confirmPassword').errors?.required\">\n                            **Confirm Password is required\n                        </span> -->\n                        <!-- <span class=\"text-danger font-weight-bold\"\n                            *ngIf=\"(registerForm.get('confirmPassword').touched || !registerForm.get('confirmPassword').pristine) && registerForm.get('confirmPassword').errors?.passwordMismatch\">\n                            **Passwords doesnot match\n                        </span> -->\n                    </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\"\n                        >Submit</button>\n                    <label>\n                        <div class=\"rem\"><input type=\"checkbox\" name=\"remember\"> Remember me</div>\n\n                    </label>\n                    <!-- <div class=\"form-footer\">\n                        <p> Don't have an account? <a href=\"#\">Sign Up</a></p>\n\n                    </div> -->\n                    <div class=\"container1\">\n                        <button type=\"reset\" class=\"cancelbtn btn btn-primary btn-block\">Cancel</button>\n                        <!-- <span class=\"psw float-right\">Forgot <a href=\"#\">password?</a></span> -->\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { StartTestComponent } from './components/start-test/start-test.component';\nimport { QuestionsComponent } from './components/questions/questions.component';\nimport { FinishTestComponent } from './components/finish-test/finish-test.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    HomeComponent,\n    StartTestComponent,\n    QuestionsComponent,\n    FinishTestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container-fluid min-vh-100\">\n    <div class=\"row min-vh-100\">\n        <div class=\"col-md-12\">\n            <!-- <div class=\"card m-5\"> -->\n            <div class=\"card-header mb-3 bgtest\">\n                {{ \"Question \" + currentQuestionNumber }}\n            </div>\n            <!-- <div class=\"card-body\"> -->\n            <h5 class=\"card-title\">{{ currentQuestion[0].question }}</h5>\n\n            <form name=\"demo\">\n\n                <div>\n                    <input type=\"radio\" value=\"0\" name=\"option\" (change)=\"changeAnswer($event)\" />\n                    &nbsp; {{ currentQuestion[0].optionA }}\n                </div>\n    \n                <div>\n                    <input type=\"radio\" value=\"1\" name=\"option\" (change)=\"changeAnswer($event)\" />\n                    &nbsp; {{ currentQuestion[0].optionB }}\n                </div>\n    \n                <div>\n                    <input type=\"radio\" value=\"2\" name=\"option\" (change)=\"changeAnswer($event)\" />\n                    &nbsp; {{ currentQuestion[0].optionC }}\n                </div>\n    \n                <div>\n                    <input type=\"radio\" value=\"3\" name=\"option\" (change)=\"changeAnswer($event)\" />\n                    &nbsp; {{ currentQuestion[0].optionD }}\n                </div>\n\n            </form>\n\n            \n\n            <!-- </div> -->\n            <div class=\"card-footer text-right mt-3 bgtest\" *ngIf=\"currentQuestionNumber < 5; else finish\">\n                <button class=\"btn btn-primary\" (click)=\"nextQuestionEventHandler()\"\n                    [disabled]=\"currentRadioSelected < 0 ? true : false\">\n                    Next\n                </button>\n            </div>\n            <ng-template #finish>\n                <div class=\"card-footer text-right mt-3 bgtest\">\n                    <button class=\"btn btn-primary\" (click)=\"finishTestEventHandler()\"\n                        [disabled]=\"currentRadioSelected < 0 ? true : false\">\n                        Finish\n                    </button>\n                </div>\n            </ng-template>\n            <!-- </div> -->\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { questions } from '../../models/questions';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { QuestionsService } from 'src/app/services/questions/questions.service';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n\n  currentQuestionNumber:number;\n  currentRadioSelected:number;\n  questionArray:questions[] = new Array();\n  currentQuestion:any = [];\n  \n\n  constructor(public questionService : QuestionsService, public activatedRoute:ActivatedRoute, private router:Router) { \n    // this.currentQuestionNumber = 1;\n    this.currentQuestionNumber=parseInt(this.activatedRoute.snapshot.params[\"questionNumber\"]);\n    this.questionService.getCurrentQuestion(this.currentQuestionNumber).subscribe((res)=>{\n      console.log(res);\n\n      this.currentQuestion = res;\n      \n    })\n\n    this.currentRadioSelected = -1;\n    \n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  nextQuestionEventHandler(){\n    let correctOption;\n\n    if(this.currentRadioSelected == 0){\n      correctOption = this.currentQuestion[0].optionA;\n    }\n    else if(this.currentRadioSelected == 1){\n      correctOption = this.currentQuestion[0].optionB;\n    }\n    else if(this.currentRadioSelected == 2){\n      correctOption = this.currentQuestion[0].optionC;\n    }\n    else{\n      correctOption = this.currentQuestion[0].optionD;\n    }\n    \n    let currQuestionObj = {\n      questionNumber : this.currentQuestionNumber,\n      question : this.currentQuestion[0].question,\n      optionA:this.currentQuestion[0].optionA,\n      optionB:this.currentQuestion[0].optionB,\n      optionC:this.currentQuestion[0].optionC,\n      optionD:this.currentQuestion[0].optionD,\n      correctOption:correctOption\n\n    }\n\n    this.questionService.submitCurrentQuestion(currQuestionObj).subscribe((res)=>{\n      console.log(res);\n      \n    })\n\n    this.currentQuestionNumber = 1+parseInt(this.activatedRoute.snapshot.params[\"questionNumber\"]);\n    this.questionService.getCurrentQuestion(this.currentQuestionNumber).subscribe((res)=>{\n      // console.log(res);\n\n      this.currentQuestion = res;\n      \n    })\n\n    this.router.navigateByUrl(`questions/${this.currentQuestionNumber}`);\n    this.currentRadioSelected = -1;\n\n  }\n\n  finishTestEventHandler(){\n\n    let correctOption;\n\n    if(this.currentRadioSelected == 0){\n      correctOption = this.currentQuestion[0].optionA;\n    }\n    else if(this.currentRadioSelected == 1){\n      correctOption = this.currentQuestion[0].optionB;\n    }\n    else if(this.currentRadioSelected == 2){\n      correctOption = this.currentQuestion[0].optionC;\n    }\n    else{\n      correctOption = this.currentQuestion[0].optionD;\n    }\n\n    let currQuestionObj = {\n      questionNumber : this.currentQuestionNumber,\n      question : this.currentQuestion[0].question,\n      optionA:this.currentQuestion[0].optionA,\n      optionB:this.currentQuestion[0].optionB,\n      optionC:this.currentQuestion[0].optionC,\n      optionD:this.currentQuestion[0].optionD,\n      correctOption:correctOption\n\n    }\n\n    this.questionService.submitCurrentQuestion(currQuestionObj).subscribe((res)=>{\n      console.log(res);\n      \n    })\n\n    this.router.navigateByUrl(`finish`);\n    // this.currentRadioSelected = -1;\n\n  }\n\n  changeAnswer(event:any){\n    const value = event.target.value;\n    console.log(value);\n    \n    this.currentRadioSelected = parseInt(value);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FinishTestComponent } from './components/finish-test/finish-test.component';\n\n\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { QuestionsComponent } from './components/questions/questions.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { StartTestComponent } from './components/start-test/start-test.component';\n\n\nconst routes: Routes = [\n\n  {path:\"candidates/register\", component:RegisterComponent},\n  {path:\"candidates/login\", component:LoginComponent},\n  {path:\"home\", component:HomeComponent},\n  {path:\"candidates/startTest\", component:StartTestComponent},\n  {path:\"questions/:questionNumber\", component:QuestionsComponent},\n  {path:\"finish\", component:FinishTestComponent},\n  {path:\"\", redirectTo:\"/home\", pathMatch:\"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionsService } from 'src/app/services/questions/questions.service';\n\n@Component({\n  selector: 'app-finish-test',\n  templateUrl: './finish-test.component.html',\n  styleUrls: ['./finish-test.component.css']\n})\nexport class FinishTestComponent implements OnInit {\n\n  correctAnswers:any;\n\n  constructor(public questionService:QuestionsService, private router:Router) { \n    this.questionService.finishTest().subscribe((res)=>{\n      console.log(\"Total correct answers given : \"+res);\n\n      this.correctAnswers = res;\n      \n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  leaveEventHandler(){\n    this.router.navigateByUrl('candidates/login');\n  }\n\n  \n}\n","<h3>Total correct answers : {{correctAnswers}}</h3>\n\n<div class=\"container-fluid\">\n    <h2 class=\"bg-warning justify-content-center\">Congratulations! You have completed the test.</h2>\n    <h3 class=\"mt-1 bg-success\">Thanks for attending the test.</h3>\n\n    <div class=\"mt-2\">\n        <h3 class=\"bg-danger\">Your total score is <span class=\"bg-warning\">{{correctAnswers}} / 5</span></h3>\n    </div>\n    \n    <div class=\"mt-2\">\n        <h3 class=\"bg-success\">Total correct Answers are :  <span class=\"bg-warning\">{{correctAnswers}}/{{5}}</span></h3>\n    </div>\n    \n    \n    <div class=\"mt-3\">\n        <button class=\"btn btn-primary\" (click)=\"leaveEventHandler();\">Leave</button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { questions } from '../../models/questions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n\n  questionArray : questions[] = new Array();\n\n  readonly questionUrl = 'http://localhost:5000/questions'\n\n  constructor(private http:HttpClient) {    \n    \n  }\n\n  getAllQuestion(){\n    return this.questionArray;\n  }\n\n  getCurrentQuestion(curr:number){\n    return this.http.get(this.questionUrl+`/${curr}`);\n  }\n\n  submitCurrentQuestion(currQuestion:questions){\n    console.log(\"Jo user ne tick kiya hai wo : \",currQuestion);\n    \n    return this.http.post(this.questionUrl+`/${currQuestion.questionNumber}`, currQuestion);\n  }\n\n  finishTest(){\n    return this.http.get(this.questionUrl+`/finish/test`);\n  }\n\n}\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}